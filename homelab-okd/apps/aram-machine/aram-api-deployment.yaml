kind: Deployment
apiVersion: apps/v1
metadata:
  annotations:
    alpha.image.policy.openshift.io/resolve-names: '*'
    app.openshift.io/route-disabled: 'false'
    app.openshift.io/vcs-ref: ''
    app.openshift.io/vcs-uri: 'https://github.com/gdeedler/aram-api'
    deployment.kubernetes.io/revision: '11'
    image.openshift.io/triggers: >-
      [{"from":{"kind":"ImageStreamTag","name":"aram-api:latest","namespace":"aram-machine"},"fieldPath":"spec.template.spec.containers[?(@.name==\"aram-api\")].image","pause":"false"}]
    openshift.io/generated-by: OpenShiftWebConsole
  name: aram-api
  namespace: aram-machine
  labels:
    app: aram-api
    app.kubernetes.io/component: aram-api
    app.kubernetes.io/instance: aram-api
    app.kubernetes.io/name: aram-api
    app.kubernetes.io/part-of: aram-machine-backend
    app.openshift.io/runtime: nodejs
    app.openshift.io/runtime-version: 16-ubi8
spec:
  replicas: 2
  selector:
    matchLabels:
      app: aram-api
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: aram-api
        deployment: aram-api
    spec:
      containers:
        - name: aram-api
          image: >-
            image-registry.openshift-image-registry.svc:5000/aram-machine/aram-api@sha256:0d9fe33f0ab4c4f0528a169bdf3203533fe7834df57bf76ebde9c5571fbb9451
          ports:
            - containerPort: 8080
              protocol: TCP
          env:
            - name: PGHOST
              valueFrom:
                secretKeyRef:
                  name: postgresql-ephemeral-parameters-pr5kh
                  key: DATABASE_SERVICE_NAME
            - name: PGDATABASE
              valueFrom:
                secretKeyRef:
                  name: postgresql
                  key: database-name
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgresql
                  key: database-password
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: postgresql
                  key: database-user
            - name: RIOT_API
              valueFrom:
                secretKeyRef:
                  name: riot-api-key
                  key: api-key
          resources:
            requests:
              cpu: 10m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600